// Mocks generated by Mockito 5.0.16 from annotations
// in space_pictures/test/infrastructure/photo_list/photo_list_service_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:space_pictures/domain/photo_list/photo_element.dart' as _i4;
import 'package:space_pictures/infrastructure/database_and_api/photo_element_dto.dart'
    as _i5;
import 'package:space_pictures/infrastructure/photo_list/photo_list_repository.dart'
    as _i2;
import 'package:space_pictures/infrastructure/save_localy/get_and_save_localy.dart'
    as _i6;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [PhotoListRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPhotoListRepository extends _i1.Mock
    implements _i2.PhotoListRepository {
  MockPhotoListRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.PhotoElement>> getAllPhotoList() =>
      (super.noSuchMethod(Invocation.method(#getAllPhotoList, []),
              returnValue:
                  Future<List<_i4.PhotoElement>>.value(<_i4.PhotoElement>[]))
          as _i3.Future<List<_i4.PhotoElement>>);
  @override
  _i3.Future<List<_i4.PhotoElement>> getAllPhotoLocalList() =>
      (super.noSuchMethod(Invocation.method(#getAllPhotoLocalList, []),
              returnValue:
                  Future<List<_i4.PhotoElement>>.value(<_i4.PhotoElement>[]))
          as _i3.Future<List<_i4.PhotoElement>>);
  @override
  dynamic savePhotoLocal(_i5.PhotoElementDTO? photoElementDTO) =>
      super.noSuchMethod(Invocation.method(#savePhotoLocal, [photoElementDTO]));
  @override
  String toString() => super.toString();
}

/// A class which mocks [GetAndSaveLocaly].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAndSaveLocaly extends _i1.Mock implements _i6.GetAndSaveLocaly {
  MockGetAndSaveLocaly() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get fullPath =>
      (super.noSuchMethod(Invocation.getter(#fullPath), returnValue: '')
          as String);
  @override
  set fullPath(String? _fullPath) =>
      super.noSuchMethod(Invocation.setter(#fullPath, _fullPath),
          returnValueForMissingStub: null);
  @override
  String get url =>
      (super.noSuchMethod(Invocation.getter(#url), returnValue: '') as String);
  @override
  set url(String? _url) => super.noSuchMethod(Invocation.setter(#url, _url),
      returnValueForMissingStub: null);
  @override
  String get fileName =>
      (super.noSuchMethod(Invocation.getter(#fileName), returnValue: '')
          as String);
  @override
  set fileName(String? _fileName) =>
      super.noSuchMethod(Invocation.setter(#fileName, _fileName),
          returnValueForMissingStub: null);
  @override
  String get folderName =>
      (super.noSuchMethod(Invocation.getter(#folderName), returnValue: '')
          as String);
  @override
  set folderName(String? _folderName) =>
      super.noSuchMethod(Invocation.setter(#folderName, _folderName),
          returnValueForMissingStub: null);
  @override
  _i3.Future<bool> getAndSave(
          dynamic urlTemp, dynamic fileNameTemp, dynamic folderName) =>
      (super.noSuchMethod(
          Invocation.method(#getAndSave, [urlTemp, fileNameTemp, folderName]),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<bool> setPathOnAndroidPhotos() =>
      (super.noSuchMethod(Invocation.method(#setPathOnAndroidPhotos, []),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<bool> setPathOnAndroidStorage() =>
      (super.noSuchMethod(Invocation.method(#setPathOnAndroidStorage, []),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  String toString() => super.toString();
}
